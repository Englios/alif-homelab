apiVersion: apps/v1
kind: Deployment
metadata:
  name: minecraft-bore-tunnel
  namespace: minecraft
spec:
  replicas: 1
  strategy:
    type: Recreate  # This ensures old pod terminates before new one starts
  selector:
    matchLabels:
      app: minecraft-bore-tunnel
  template:
    metadata:
      labels:
        app: minecraft-bore-tunnel
    spec:
      terminationGracePeriodSeconds: 60  # Give pod 60 seconds to shut down gracefully
      containers:
      - name: bore-tunnel
        image: ekzhang/bore:latest
        # Use the default entrypoint ["./bore"] from the image
        args:
          - "local"
          - "25565"
          - "--to"
          - "$(BORE_SERVER_IP)"
          - "--local-host"
          - "minecraft-server.minecraft.svc.cluster.local"
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"
        env:
        - name: RUST_LOG
          value: "info"
        - name: BORE_SERVER_IP
          valueFrom:
            secretKeyRef:
              name: bore-server-config
              key: server-ip
        - name: BORE_SERVER_TYPE
          valueFrom:
            secretKeyRef:
              name: bore-server-config
              key: server-type
      # Health monitor to check if the tunnel is working
      - name: health-monitor
        image: busybox:latest
        command: ["/bin/sh"]
        args:
          - -c
          - |
            echo "🔍 Starting bore tunnel health monitor..."
            
            # Simple health check loop that creates/removes a health file
            while true; do
              # Test if we can connect to minecraft server (what bore tunnel forwards)
              if nc -z minecraft-server.minecraft.svc.cluster.local 25565 2>/dev/null; then
                echo "✅ Minecraft server reachable - tunnel healthy" > /tmp/health
              else
                echo "❌ Minecraft server unreachable - tunnel unhealthy" > /tmp/health
                rm -f /tmp/health 2>/dev/null || true
              fi
              sleep 30
            done
        resources:
          requests:
            memory: "8Mi"
            cpu: "5m"
          limits:
            memory: "16Mi"
            cpu: "20m"
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "test -f /tmp/health"
          initialDelaySeconds: 15
          periodSeconds: 30
          failureThreshold: 3
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "test -f /tmp/health"
          initialDelaySeconds: 30
          periodSeconds: 60
          failureThreshold: 3
      restartPolicy: Always 